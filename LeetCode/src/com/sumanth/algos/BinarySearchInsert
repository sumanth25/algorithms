package com.sumanth.algos;

public class BinarySearchInsert {
    /**
     Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

     You must write an algorithm with O(log n) runtime complexity.
     */
    public static void main(String[] args) {
        int[] nums = {1,3,5,6};
        int target = 2;
        int result=binarySearchInsert(nums,0,nums.length-1,target);
        System.out.println("The insertion index is: "+result);
    }

    // Iterative Binary Search Insert Index
    private static int binarySearchInsert(int[] nums,int low,int high,int target){
        while(low<=high){
            int mid = low + (high-low)/2;
            if(target==nums[mid]){
                return mid;
            }else if(target>nums[mid]){
                low = mid + 1;
            }else{
                high = mid-1;
            }
        }
        return low;
    }
}

/*
Complexity Analysis
Time complexity : O(log n)
Space complexity : O(1)
 */
